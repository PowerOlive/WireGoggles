<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string name="app_name">WireGoggles</string>

    <string name="about_text">WireGoggles 2.3.5\nÂ© 2010-2016 Brian Nenninger\nMore info: www.dozingcatsoftware.com/WireGoggles\nComments and bug reports: bnenning@gmail.com\n\nWireGoggles displays real-time wireframe outlines of what your camera is looking at. Touch the screen to show or hide the controls, which are the following:\nColor: Displays previews of all available color schemes in a grid. Touch the color you want to select it. The bottom right item with a &quot;Custom&quot; label lets you create your own color scheme. When you select it, buttons will appear in each corner and the center. Touch a corner button to set the color for that corner, and the center button to set the background color.\nQuality: Switches between medium and high quality. High quality may be less smooth, depending on the performance of your device.\nSave Picture: Saves the wireframe image to your SD card in the &quot;WireGoggles&quot; directory. You can also save pictures using the camera button or trackball button. After saving a picture, a preview will be shown in the upper right. Touch the preview to view it full screen, where you will have the options to delete it or open it in the gallery application.\nPinP: Toggles picture-in-picture mode which shows the normal camera view in a corner of the screen.\nRecordings: Shows a list of videos you have recorded using WireGoggles. See below for details on recording.\n\nDouble-tap the screen to zoom in and out if your camera supports it. On Android 2.3 (Gingerbread) or later and a device with a front-facing camera, there will be a &quot;Switch Camera&quot; button which toggles between the back and front cameras.\n\nSaving Pictures and Video:\nToggle between camera and video mode using buttons in the upper left. In camera mode, the shutter button is blue and and will save a single picture. Pictures are saved to your SD card in the &quot;WireGoggles&quot; directory. After saving a picture, a preview will be shown in the upper right. Touch the preview to view it full screen, where you will have the options to delete it or open it in the gallery application.\n\nIn video mode, the shutter button is red. Touch it to start recording, and touch it again to stop. You can view your videos with the Recordings button in the bottom right, which will bring up a list of all videos you\'ve recorded. Select one of them to bring up a view which allows you to play, pause, and single step through the video. You can save individual frames with the &quot;Snapshot&quot; button, which saves images to the same WireGoggles directory that camera mode uses. The &quot;Colors&quot; button allows you to watch the video in a different color scheme.\n\nThe gear button in the upper left opens a settings screen where you can control whether sound is recorded in videos, and the resolution of video recordings. High quality uses the maximum resolution your device\'s camera is capable of, but may result in inconsistent frame rates depending on your device\'s performance.\n\nWireGoggles can export your videos to WebM format (http://www.webmproject.org). WebM files can be viewed in the Chrome and Firefox web browsers, as well as media players such as VLC. You can also upload WebM files to your YouTube account. The &quot;Export&quot; button will export a copy of the video to WebM format; this may take a while depending on your device. When finished, you will have the option to share the video, which will allow you to send it as an email attachment, or upload it directly to YouTube in Android 2.3 or later. Exported WebM files are stored on your SD card in the WireGoggles/video directory.\n\nRecording files are very large. Depending on your device\'s camera and performance, each second of video can take up to 3MB. Currently videos are limited to 60 seconds in length, to avoid inadvertently using too much space.\n\nWireGoggles uses several open source components, including libvpx for video encoding, vorbis-java for audio encoding, and the Open Intents color picker. Copyright and license information for these components is available at http://www.dozingcatsoftware.com/WireGoggles/legal.html</string>
    	
	<string name="aboutButtonLabel">About/Help</string>
	<string name="colorButtonLabel">Change Colors</string>
	<string name="qualityButtonLabel">Change Quality</string>
	<string name="colorButtonShortLabel">Colors</string>
	<string name="qualityButtonShortLabel">Quality</string>
	<string name="saveImageButtonLabel">Save Picture</string>
	<string name="switchCameraButtonLabel">Switch Camera</string>
    <string name="pipButtonLabel">PinP</string>
    <string name="convertImageButtonLabel">Choose Picture</string>
    <string name="chooseCustomColorsLabel">Custom</string>
	<string name="getFullVersionButtonLabel">Get Full Version</string>
	<string name="chooseCustomColorButtonLabel">Change</string>
	<string name="chooseCustomBackgroundColorButtonLabel">Change Background</string>
	<string name="customColorDoneLabel">Done</string>
	<string name="deleteImageButtonLabel">Delete Image</string>
	<string name="openGalleryButtonLabel">View In Gallery</string>
	<string name="exitViewImageButtonLabel">Return</string>
	<string name="startVideoRecordingButtonLabel">Start Recording</string>
	<string name="stopVideoRecordingButtonLabel">Stop Recording</string>
	<string name="videoLibraryButtonLabel">Library</string>
	<string name="noVideosFound">No video recordings found.</string>
	<string name="noImagesFound">No pictures found.</string>
	
	<string name="encodingDialogTitle">Exporting</string>
	<string name="encodingDialogMessageVideo">Exporting to WebM: Writing video track</string>
	<string name="encodingDialogMessageAudio">Exporting to WebM: Writing audio track</string>
	<string name="encodingBeforeShareDialogMessage">Before sharing your video, it must be exported to WebM format.</string>
	<string name="encodingConfirmDialogMessage">A WebM file already exists for this video. Do you want to export again and replace it?</string>
	
	<string name="recordAudioPrefsKey">recordAudio</string>
	<string name="recordingQualityPrefsKey">recordingQuality</string>
	<string name="recordHighQualityVideoPrefsKey">recordHighQualityVideo</string>
	<bool name="recordAudioDefault">true</bool>
	<bool name="recordHighQualityVideoDefault">false</bool>
	<string name="recordAudioPrefsTitle">Record Audio</string>
	<string name="recordHighQualityVideoPrefsTitle">Record High Quality Video</string>
	<string name="recordingQualityPrefsTitle">Video Recording Quality</string>
	<string name="recordHighQualityVideoPrefsMessageFormat" formatted="false">Video resolution will be %dx%d</string>
</resources>
